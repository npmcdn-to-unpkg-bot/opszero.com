---
title: "Serverless Landing Page"
tags: 
layout: docs
---

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#orgheadline1">1. Introduction</a></li>
<li><a href="#orgheadline2">2. Tools</a></li>
<li><a href="#orgheadline5">3. Backend</a>
<ul>
<li><a href="#orgheadline3">3.1. Lambda Policy</a></li>
<li><a href="#orgheadline4">3.2. Lambda Code</a></li>
</ul>
</li>
<li><a href="#orgheadline6">4. Frontend</a></li>
<li><a href="#orgheadline7">5. Help</a></li>
</ul>
</div>
</div>
<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1"><span class="section-number-2">1</span> Introduction</h2>
<div class="outline-text-2" id="text-1">
<p>
When starting up a website the first thing you want to do is put up a
tool to collect emails. There are many tools to achieve this from
MailChimp to Gumroad. However, we wanted to build a tool that ensures
control of your data.
</p>

<p>
We wanted to fulfill the following criteria:
</p>

<ul class="org-ul">
<li>Control our user interface.</li>
<li>Control privacy of your users.</li>
<li>Make sure that customers have all the features of normal email
subscription services. Ability to unsubscribe.</li>
</ul>
</div>
</div>

<div id="outline-container-orgheadline2" class="outline-2">
<h2 id="orgheadline2"><span class="section-number-2">2</span> Tools</h2>
<div class="outline-text-2" id="text-2">
<p>
We will be using the following tools to create a subscription form and
service.
</p>

<ul class="org-ul">
<li>AWS Lambda</li>
<li>DynamoDB</li>
<li>AngularJS 2.0</li>
<li>Bash and Mutt</li>
</ul>
</div>
</div>

<div id="outline-container-orgheadline5" class="outline-2">
<h2 id="orgheadline5"><span class="section-number-2">3</span> Backend</h2>
<div class="outline-text-2" id="text-3">
<p>
The backend of the service will be powered by AWS Lambda and AWS
DynamoDB. We are using these tools to ensure a NoOps infrastructure
and easy maintainence. As said we want to split the AWS Lambda
function into two portions. One for subscribing and one for
unsubscribing.
</p>
</div>

<div id="outline-container-orgheadline3" class="outline-3">
<h3 id="orgheadline3"><span class="section-number-3">3.1</span> Lambda Policy</h3>
<div class="outline-text-3" id="text-3-1">
<div class="org-src-container">

<pre class="src src-json">{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "PutItemToAutotuneInstanceMetrics",
            "Effect": "Allow",
            "Action": [
                "dynamodb:PutItem"
            ],
            "Resource": "arn:aws:dynamodb:us-west-2:451305228097:table/AcksinEmails"
        }
    ]
}
</pre>
</div>
</div>
</div>

<div id="outline-container-orgheadline4" class="outline-3">
<h3 id="orgheadline4"><span class="section-number-3">3.2</span> Lambda Code</h3>
<div class="outline-text-3" id="text-3-2">
<div class="org-src-container">

<pre class="src src-python">from __future__ import print_function # Python 2/3 compatibility

import boto3
import json
import decimal

# Helper class to convert a DynamoDB item to JSON.
class DecimalEncoder(json.JSONEncoder):
    def default(self, o):
        if isinstance(o, decimal.Decimal):
            if o % 1 &gt; 0:
                return float(o)
            else:
                return int(o)
        return super(DecimalEncoder, self).default(o)

dynamodb = boto3.resource('dynamodb')
table = dynamodb.Table('AcksinEmails')

print('Loading function')

def lambda_handler(event, context):
    print("Received event: " + json.dumps(event, indent=2))

    product = ''
    try:
        product = event['Product']
    except:
        print("No product found")

    response = table.put_item(
        Item={
            'Email': event['Email'],
            'Products': [event['Product']],
            # 'Notes': event['Notes']
        }
    )

    # Deal with more than one subscription.

    print("PutItem succeeded:")
    print(json.dumps(response, indent=4, cls=DecimalEncoder))

    return ""
</pre>
</div>
</div>
</div>
</div>


<div id="outline-container-orgheadline6" class="outline-2">
<h2 id="orgheadline6"><span class="section-number-2">4</span> Frontend</h2>
<div class="outline-text-2" id="text-4">
<p>
For an email subscription service we need to include two features. The
first one is subscribe a user to email. The second one is unsubscribe
users from the email service. We will be using AngularJS for this
service.
</p>
</div>
</div>

<div id="outline-container-orgheadline7" class="outline-2">
<h2 id="orgheadline7"><span class="section-number-2">5</span> Help</h2>
</div>
